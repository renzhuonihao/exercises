练习 3.38
============

a)
--------

假设银行按\ `先来先服务(first come first service) <http://en.wikipedia.org/wiki/First-come,_first-served>`_ 的方式处理业务，那么 Peter 、 Paul 和 Mary 的交易有以下六种可能的排列方式：

1. Peter -> Paul -> Mary

2. Peter -> Mary -> Paul

3. Paul -> Peter -> Mary

4. Paul -> Mary -> Peter

5. Mary -> Peter -> Paul

6. Mary -> Paul -> Peter

以上的这些排列方式会产生以下的余额值（括号里面表示的是执行操作之后的余额）：

1. Peter (110) -> Paul (90) -> Mary (45)

2. Peter (110) -> Mary (55) -> Paul (75)

3. Paul (80) -> Peter (90) -> Mary (45)

4. Paul (80) -> Mary (40) -> Peter (50)

5. Mary (50) -> Peter (60) -> Paul (40)

6. Mary (50) -> Paul (30) -> Peter (40)


b)
--------

每个交易操作可以分为三个步骤： 1)取出 balance； 2)计算新的 balance； 3)为 balance 设置新值。

如果允许进程交错的话，那么 Peter 、 Paul 和 Mary 的三个交易进程共有 3 * 3 * 3 = 27 种可能的排列方式，就算减去前面 a) 部分产生的 6 种排列方式，还有 21 种可能的排列方式未列出来，以下是其中的两个例子：

首先是一个产生余额 80 的排列：

::

        |      Mary               Peter          Bank          Paul
        |
        |   取得余额 100     取得余额 100      余额 100      得余额为 100
        |       |                   |                           |
        |       v                   v                           v
        |   计算余额 50      计算余额为 110                  计算余额为 80
        |       |                   |                           |
        |       v                   v                           v
        |   设置余额为 50    设置余额为 110                  设置余额为 80
        |       |                   |                           |
        |       +----------------------------> 余额 50          |
        |                           |                           |
        |                           +--------> 余额 110         |
        |                                                       |
        |                                      余额 80  <-------+
        |
        v
      time

接着是一个产生余额 55 的排列：

::

        |      Mary               Peter           Bank         Paul
        |
        |       |            取得余额 100      余额 100      得余额为 100
        |       |                   |                           |
        |       |                   v                           v
        |       |            计算余额为 110                  计算余额为 80
        |       |                   |                           |
        |       |                   v                           v
        |       |            设置余额为 110                  设置余额为 80
        |       |                   |                           |
        |       |                   |          余额 80  <------+
        |       |                   |   
        |       |                   +--------> 余额 110
        |       |
        |   获得余额 110
        |       |
        |       v
        |   计算余额 55
        |       |
        |       v
        |   设置余额 55
        |       |
        |       +----------------------------> 余额 55
        |
        |
        v
      time
