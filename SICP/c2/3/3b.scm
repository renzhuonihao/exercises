(define (make-point x y) (cons x y))
(define (x-point point) (car point))
(define (y-point point) (cdr point))

(define (make-rect a-piont b-point)
  (let ((a-x (x-point a-piont))
	(a-y (y-point a-piont))
	(b-x (x-point b-point))
	(b-y (y-point b-point)))
    (cons (make-point (min a-x b-x) (min a-y b-y))
	  (make-point (max a-x b-x) (max a-y b-y)))))
(define (vert rect)
  (let ((min (car rect))
	(max (cdr rect)))
    (- (y-point max)
       (y-point min))))
(define (hor rect)
  (let ((min (car rect))
	(max (cdr rect)))
    (- (x-point max)
       (x-point min))))

(define (cal-circu rect)
  (let ((v (vert rect))
	(h (hor rect)))
    (* 2 (+ v h))))
(define (cal-area rect)
  (let ((v (vert rect))
	(h (hor rect)))
    (* h v)))
