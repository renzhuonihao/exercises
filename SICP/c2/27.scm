(define nil '())
(define (d-r ls)
  (define (i-d-r ls result)
    (cond ((null? ls) result)
          ((pair? (car ls)) (i-d-r (cdr ls)
                                   (cons (d-r (car ls))
                                         result)))
          (else (i-d-r (cdr ls)
                       (cons (car ls)
                             result)))))
  (i-d-r ls nil))
(define test1 (list (list 1 2) (list 3 4)))
(define test2 (list (list 1 2 (list 3 4 5)) (list 9 4 5)))
(define test3 (list 1 (list 2 (list 3 (list 4 (list 5 6))))))
(define test4 (list (list 1 2 3) (list 4 5 6) (list 7 8 9)))